{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n// Добавляем обработчик события на отправку формы с классом 'form'\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n    // Предотвращаем стандартное поведение формы (перезагрузку страницы)\n    event.preventDefault();\n  \n    // Получаем значение задержки из элемента формы с именем 'delay'\n    const delay = parseInt(this.elements.delay.value, 10);\n  \n    // Получаем выбранное состояние из элемента формы с именем 'state'\n    const state = this.elements.state.value;\n  \n    // Создаем промис, который разрешится или отклонится после задержки\n    const myPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (state === 'fulfilled') {\n          resolve(delay);\n        } else {\n          reject(delay);\n        }\n      }, delay);\n    });\n  \n    // Обработка разрешенного промиса\n    myPromise.then((delay) => {\n        iziToast.success({\n            title: 'Success',\n            message: `Fulfilled promise in ${delay}ms`,\n            position: 'topCenter',\n          });\n    // Обработка отклоненного промиса\n    }).catch((delay) => {\n        iziToast.error({\n            title: 'Error',\n            message: `Rejected promise in ${delay}ms`,\n            position: 'topCenter',\n          });\n    });\n  });\n  \n  // Функция для отображения Snackbar\n  function showSnackbar(message) {\n    // Создаем элемент div для Snackbar\n    const snackbar = document.createElement('div');\n    snackbar.className = 'snackbar';\n    snackbar.textContent = message;\n  \n    // Добавляем Snackbar к телу документа\n    document.body.appendChild(snackbar);\n  \n    // Устанавливаем таймер для удаления Snackbar через 3 секунды\n    setTimeout(() => {\n      snackbar.remove();\n    }, 3000);\n  }\n  \n//   Добавляет обработчик события на форму с классом 'form', который срабатывает при её отправке.\n\n// Предотвращает стандартное поведение формы (перезагрузку страницы) с помощью event.preventDefault().\n\n// Получает значения задержки и состояния из элементов формы.\n\n// Создает промис, который разрешается через указанную задержку или отклоняется в зависимости от выбранного состояния.\n\n// В случае успешного разрешения промиса вызывается функция showSnackbar с соответствующим сообщением.\n\n// В случае отклонения промиса также вызывается showSnackbar, но с другим сообщением.\n\n// Функция showSnackbar создает элемент Snackbar, добавляет его к телу документа и устанавливает таймер для его удаления через 3 секунды."],"names":["event","delay","state","resolve","reject","iziToast"],"mappings":"oGAOA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUA,EAAO,CAExEA,EAAM,eAAc,EAGpB,MAAMC,EAAQ,SAAS,KAAK,SAAS,MAAM,MAAO,EAAE,EAG9CC,EAAQ,KAAK,SAAS,MAAM,MAGhB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACjD,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACd,CAAK,EAGS,KAAMA,GAAU,CACtBI,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,wBAAwBJ,MACjC,SAAU,WACtB,CAAW,CAEX,CAAK,EAAE,MAAOA,GAAU,CAChBI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBJ,MAChC,SAAU,WACtB,CAAW,CACX,CAAK,CACL,CAAG"}